@page "/supervisor/taskrecord/form"
@page "/supervisor/task/formrecord/{Id:int}"
@layout SupervisorLayout
@attribute [Authorize(Roles = "supervisor")]
@inject ITaskService TaskService
@inject ICompiledTaskService CompiledTaskService
@inject IUserService UserService
@inject IToastService Toast
@inject NavigationManager NavManager
@inject IJSRuntime JsRun

<!-- HEADER STARTS HERE -->
<div class="main_content">
    <div class="header">
        <div class="fas fa-bars" id="menu-btn"></div>
        <div><i class="fas fa-solid fa-list-check"></i>Edit Task Record</div>
        <a href="profile.html"><i class="fas fa-solid fa-user" id="profile"></i></a>
    </div>
    <!-- HEADER ENDS HERE -->
    <!-- ADD NEW TASK PAGE CONTENT STARTS HERE -->
    <div class="content">
        <EditForm Model="compiledTask" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <h3>Task Record Information</h3>
            <hr>
            <div class="row">
                <div class="column">
                    <label for="tcode">Task Code</label>
                    <input type="text" id="tcode" disabled @bind-value="compiledTask.TaskCode" placeholder="Task Code">
                </div>
                <div class="column">
                    <label for="sname">Student Name</label>
                    <input type="text" id="sname" disabled @bind-value="compiledTask.StudentName" name="sname" placeholder="Student Name">
                </div>
            </div>

            <div class="row">
                <div class="column">
                    <label for="ufile">Uploaded File</label>
                    <input type="text" id="ufile" disabled @bind-value="compiledTask.StudentFileName" name="ufile" placeholder="Uploaded File">
                </div>
                <div class="column">
                    <label for="tdsub">Date of Submission</label>
                    <input type="datetime-local" disabled id="tdsub" @bind-value="compiledTask.SubmissionDate" name="tdsub" placeholder="Date of Submission">
                </div>
            </div>

            <div class="row">
                <div class="column">
                    <label for="remarks">Remarks</label>
                    <input type="text" id="remarks" @bind-value="compiledTask.Remarks" name="remarks" placeholder="Remarks">
                </div>
                <div class="column">
                    <label for="score">Score</label>
                    <input type="number" id="score" @bind-value="compiledTask.Score" name="score" placeholder="Score">
                </div>
            </div>

            <div class="row">
                <div class="forbutton">
                    @if (!loading)
                    {
                        <button type="submit">SUBMIT</button>
                        <a href="/supervisor/task" class="cancel-btn">CANCEL</a>
                    }
                    else
                    {
                        <div class="line-wobble"></div>
                    }
                </div>
            </div>
        </EditForm>
    </div>
    <!-- ADD NEW TASK PAGE CONTENT ENDS HERE -->
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    CompiledTask compiledTask = new CompiledTask();
    bool loading = false;

    protected override async Task OnInitializedAsync()
    {
        if(Id.HasValue)
        {
            compiledTask = await CompiledTaskService.GetCompiledTask(Id.Value);
            if(compiledTask != null)
            {
                var task = await TaskService.GetTasks(compiledTask.TaskId);
                var student = await UserService.GetUser(compiledTask.StudentId);
                compiledTask.TaskCode = task.TaskCode;
                compiledTask.StudentName = $"{student.first_name} {student.last_name}";
            }
        }
    }

    private async Task OnSubmit()
    {
        loading = true;
        var result = await CompiledTaskService.UpdateCompiledTask(compiledTask);
        if(result != null)
        {
            Toast.ShowSuccess($"Submitted Task of {compiledTask.StudentName} successfully updated", "Success");
            NavManager.NavigateTo("/supervisor/taskrecord");
        }
    }
}

