@page "/supervisor/task/form"
@page "/supervisor/task/form/{Id:int}"
@layout SupervisorLayout
@attribute [Authorize(Roles = "supervisor")]
@inject ITaskService TaskService
@inject IToastService Toast
@inject NavigationManager NavManager
@inject IJSRuntime JsRun

<!-- HEADER STARTS HERE -->
<div class="main_content">
    <div class="header">
        <div class="fas fa-bars d-block d-md-none" id="menu-btn"></div>
        <div><i class="fas fa-solid fa-list"></i>Task</div>
        <a href="/supervisor/profile"><i class="fas fa-solid fa-user" id="profile"></i></a>
    </div>
    <!-- HEADER ENDS HERE -->
    <!-- ADD NEW TASK PAGE CONTENT STARTS HERE -->
    <div class="content">
        <EditForm Model="task" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <h3>Task Information</h3>
            <hr>
            <div class="row">
                <div class="column">
                    <label for="tcode">Task Code</label>
                    <ValidationMessage For="() => task.TaskCode" />
                    <input type="text" id="tcode" @bind-value="task.TaskCode" placeholder="Task Code">
                </div>
                <div class="column">
                    <label for="tname">Task Name</label>
                    <ValidationMessage For="() => task.TaskName" />
                    <input type="text" id="tname" @bind-value="task.TaskName" placeholder="Task Name">
                </div>
            </div>

            <div class="row">
                <div class="column">
                    <label for="tdesc">Description</label>
                    <ValidationMessage For="() => task.Description" />
                    <input type="text" id="tdesc" @bind-value="task.Description" placeholder="Description">
                </div>
                <div class="column">
                    <label for="tdeadline">Deadline</label>
                    <ValidationMessage For="() => task.Deadline" /><br>
                    <InputDate @bind-Value="task.Deadline" />
                </div>
            </div>

            <div class="row">
                <div class="forbutton">
                    <button type="submit">SUBMIT</button>
                    <a href="/supervisor/task" class="cancel-btn">CANCEL</a>
                </div>
            </div>
        </EditForm>
    </div>
    <!-- ADD NEW TASK PAGE CONTENT ENDS HERE -->
</div>

@code {
    [Parameter]
    public int? Id { get; set; }

    Tasks task = new Tasks();

    protected async override Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            task = await TaskService.GetTasks(Id.Value);
        }
    }

    private async Task OnSubmit()
    {
        if (task.Id == 0)
        {
            var result = await TaskService.AddTasks(task);
            if (result != null)
            {
                Toast.ShowSuccess("New Task Added", "Success");
                NavManager.NavigateTo("supervisor/task");
            }
        }
        else
        {
            var result = await TaskService.UpdateTasks(task);
            if (result != null)
            {
                Toast.ShowSuccess("Task Successfully Updated", "Success");
                NavManager.NavigateTo("supervisor/task");
            }
        }
    }
}
