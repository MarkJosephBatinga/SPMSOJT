@page "/student/myrecord"
@layout StudentLayout
@attribute [Authorize(Roles = "student")]
@inject ICompiledTaskService CompiledTaskService
@inject ITaskService TaskService
<!-- HEADER STARTS HERE -->
<div class="main_content">
    <div class="header">
        <div class="fas fa-bars d-block d-md-none" id="menu-btn"></div>
        <div><i class="fas fa-solid fa-list"></i>Task Record</div>
        <a href="/student/profile"><i class="fas fa-solid fa-user" id="profile"></i></a>
    </div>
    <!-- HEADER ENDS HERE -->
    <!-- TASK PAGE CONTENT STARTS HERE -->
    <!-- TASK PAGE SECTION 1 STARTS HERE -->
    <section class="admindb-s1">
        <div class="search-container">
            <form action="#">
                <input type="text" placeholder="Search task" name="search">
                <button type="submit" class="search-button">Search</button>
            </form>
        </div>
    </section>
    <!-- TASK PAGE SECTION 1 ENDS HERE -->
    <!-- TASK PAGE SECTION 2 STARTS HERE -->
    <section class="studentable-s2">
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Task Code</th>
                    <th>Uploaded File</th>
                    <th>Date of Submission</th>
                    <th>Remarks</th>
                    <th>Score</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var compiledTask in CompiledTasks)
                {
                <tr>
                    <td>@compiledTask.TaskCode</td>
                    <td>@compiledTask.StudentFileName</td>
                    <td>@compiledTask.SubmissionDate.ToLongDateString()</td>
                    <td>@(compiledTask.Remarks == null ? "Done": compiledTask.Remarks)</td>
                    <td>@(compiledTask.Score == 0 ? "No Scores YEt": compiledTask.Score)</td>
                </tr>
                }
                <!-- and so on... -->
            </tbody>
        </table>
    </section>
    <!-- TASK PAGE SECTION 2 ENDS HERE -->
    <!-- TASK PAGE CONTENT ENDS HERE -->
</div>

@code {
    List<CompiledTask> CompiledTasks = new List<CompiledTask>();

    protected async override Task OnInitializedAsync()
    {
        CompiledTasks = await CompiledTaskService.GetAllCompiledTask();
        foreach (var compiledTask in CompiledTasks)
        {
            var task = await TaskService.GetTasks(compiledTask.TaskId);
            compiledTask.TaskCode = task.TaskCode;
        }
    }
}
