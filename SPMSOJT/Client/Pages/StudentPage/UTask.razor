@page "/student/mytask"
@layout StudentLayout
@attribute [Authorize(Roles = "student")]
@inject NavigationManager NavManager
@inject ITaskService TaskService
@inject ICompiledTaskService CompiledTaskService
@inject ILoginService LoginService
@inject ILocalStorageService LocalStorage
@inject ISearchService SearchService
<!-- HEADER STARTS HERE -->
<div class="main_content">
    <div class="header">
        <div class="fas fa-bars d-block d-md-none" id="menu-btn"></div>
        <div><i class="fas fa-solid fa-clipboard-list"></i>My Tasks</div>
        <a href="/student/profile"><i class="fas fa-solid fa-user" id="profile"></i></a>
    </div>
    <!-- HEADER ENDS HERE -->
    <!-- TASK PAGE CONTENT STARTS HERE -->
    <!-- TASK PAGE SECTION 1 STARTS HERE -->
    <section class="admindb-s1">
        <div class="search-container">
            <EditForm Model="search" OnValidSubmit="OnSubmitSearch">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <input type="text" @bind-value="search.SearchString" placeholder="Search by Task Code" name="search">
                <ValidationMessage For="() => search.SearchString" />
                <button type="submit" class="search-button">Search</button>
            </EditForm>
        </div>
    </section>
    <!-- TASK PAGE SECTION 1 ENDS HERE -->
    <!-- TASK PAGE SECTION 2 STARTS HERE -->
    <section class="studentable-s2">
        <table class="styled-table">
            <thead>
                <tr>
                    <th>Task Code</th>
                    <th>Task Name</th>
                    <th>Description</th>
                    <th>Deadline</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in AllTasks)
                {
                    <tr class="active-row">
                        <td>@task.TaskCode</td>
                        <td>@task.TaskName</td>
                        <td>@task.Description</td>
                        <td>@task.Deadline.ToLongDateString()</td>
                        <td><a @onclick="() => OnComplyClick(task.Id)">Comply</a></td>
                    </tr>
                }
                <!-- and so on... -->
            </tbody>
        </table>
    </section>
    <!-- TASK PAGE SECTION 2 ENDS HERE -->
    <!-- TASK PAGE CONTENT ENDS HERE -->
</div>

@code {

    List<Tasks> AllTasks = new List<Tasks>();
    Search search = new Search();
    int studentId;

    protected async override Task OnInitializedAsync()
    {
        var username = await LocalStorage.GetItemAsStringAsync("username");
        var user = await LoginService.GetUser(username);
        studentId = user.Id;
        AllTasks = await TaskService.GetAllTaskPerStudent(user.Id);
    }

    private async Task OnSubmitSearch()
    {
        search.StudentId = studentId;
        AllTasks = await SearchService.SearchTaskPerStudent(search);
    }

    private void OnComplyClick(int Id)
    {
        NavManager.NavigateTo($"/student/mytask/comply/{Id}");
    }
}
